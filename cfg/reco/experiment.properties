# --------------------------------
# GENERAL OPTIONS
# --------------------------------
EXPERIMENTS = 50

PARALLEL = true
#PARALLEL = false
#PARALLEL.FORCE_THREADS = 2

#INCLUDE = GP.properties
INCLUDE = GEP.properties
#INCLUDE = NEAT.properties
#INCLUDE = SNEAT.properties
#INCLUDE = DIRECT_SADE.properties
#INCLUDE = DIRECT_CMAES.properties

BUILDER = "precompiled"
#BUILDER = "basic"
#BUILDER = "cascade"

#WEIGHT_EVALUATOR = "basic"
WEIGHT_EVALUATOR = "original"
#WEIGHT_EVALUATOR = "identity"
#WEIGHT_EVALUATOR = "biased", "original"

#determines what type of distance is used for niching algorithms (NEAT, GPCrowding, ...)
#DISTANCE = "phenotype"
DISTANCE = "genotype"

#compute and store full genotype distance matrix
GENOTYPE_DIVERSITY = true
#compute and store full phenotype distance matrix
PHENOTYPE_DIVERSITY = true

# show info for each generation
PRINT.generation = true
# show info when a new champion is found
PRINT.progress = true
#show evaluated champion (final network)
PRINT.progressShowHyperNet = false
# show evaluated champion (visualization)
PRINT.progressShowProblem = false
# show champion after EA stops
PRINT.finished = true
# show evaluated champion after EA stops (final network)
PRINT.finishedShowHyperNet = true
# show evaluated champion after EA stops (visualization)
PRINT.finishedShowProblem = true

# store statistics for the each generation
PRINT.storeRun = true

# --------------------------------
# EXPERIMENT SETUP
# --------------------------------
#PROBLEM = "RECO"
PROBLEM = "FIND_CLUSTER"
#PROBLEM = "FIND_CLUSTER2"

#NET_ACTIVATIONS = 2
NET_ACTIVATIONS = 1

RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorXOR"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorAND"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorCopy1D"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorCopyNegative1D"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorCopyMirrored1D"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorCopyShifted1D"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorCopyRotated1D"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorLine1D"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorZoomAll1D"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorTwoShifted1D"
#RECO.GENERATOR = "hyper.experiments.reco.problem.PatternGeneratorCopy1D", "hyper.experiments.reco.problem.PatternGeneratorCopyNegative1D"
RECO.LINE_SIZE = 2
RECO.SHIFT_BY = 1
RECO.PATTERNS = "101; 110"

FIND_CLUSTER.NODES_X = 5
FIND_CLUSTER.NODES_Y = 5

# original setting
#FIND_CLUSTER.FITNESS_THRESHOLD = 0.95
FIND_CLUSTER.FITNESS_THRESHOLD = 1.0

FIND_CLUSTER2.VISUAL_FIELD_RESOLUTION = 11
