INCLUDE = fc/fc55.properties
#LEAVE THE FIRST LINE EMPTY
EXPERIMENTS = 200

#INCLUDE = reco/reco1D.properties
#INCLUDE = bool/xor.properties

PARALLEL = true
#PARALLEL.FORCE_THREADS = 4

SOLVER = "GP"

GP.TYPE = "gp.GP"
#GP.TYPE = "gp.GPCrowding"
#GP.FUNCTIONS = "Add; Multiply; Sin; Atan; SqrtAbs; Abs; Gauss; GaussDiff"
#GP.FUNCTIONS = "Add; Multiply"
GP.FUNCTIONS = "Add; Multiply; Sin; Atan; Gauss"

GP.MAX_GENERATIONS = 300
#GP.MAX_GENERATIONS = 1000
GP.MAX_EVALUATIONS = 100000
GP.POPULATION_SIZE = 100

#GP.MAX_DEPTH = 4
GP.MAX_DEPTH = 5

GP.MUTATION_SUBTREE_PROBABLITY = 1.0
GP.MUTATION_CAUCHY_PROBABILITY = 0.8
#GP.MUTATION_CAUCHY_PROBABILITY = 0.1
GP.MUTATION_CAUCHY_POWER = 0.01

#-----------------------------------------

BUILDER = "precompiled"
#BUILDER = "basic"
#BUILDER = "cascade"

#WEIGHT_EVALUATOR = "basic"
WEIGHT_EVALUATOR = "original"
#WEIGHT_EVALUATOR = "biased"
#WEIGHT_EVALUATOR = "biased", "original"

#determines what type of distance is used for niching algorithms (NEAT, GPCrowding, ...)
#DISTANCE = "phenotype"
DISTANCE = "genotype"

#compute and store full genotype distance matrix
GENOTYPE_DIVERSITY = false
#compute and store full phenotype distance matrix
PHENOTYPE_DIVERSITY = false

#STORE_GENOTYPES_MATHEMATICA = true
STORE_GENOTYPES_MATHEMATICA = false

# show info for each generation
PRINT.generation = false
# show info when a new champion is found
PRINT.progress = true
#show evaluated champion (final network)
PRINT.progressShowHyperNet = false
# show evaluated champion (visualization)
PRINT.progressShowProblem = false
# show champion after EA stops
PRINT.finished = false
# show evaluated champion after EA stops (final network)
PRINT.finishedShowHyperNet = true
# show evaluated champion after EA stops (visualization)
PRINT.finishedShowProblem = true

# store statistics for the each generation
PRINT.storeRun = false
