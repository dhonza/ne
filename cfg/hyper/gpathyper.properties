INCLUDE = fc/fc55.properties
#LEAVE THE FIRST LINE EMPTY
EXPERIMENTS = 200

#INCLUDE = reco/rc.properties
#INCLUDE = bool/xor.properties
#INCLUDE = fc/fc55.properties
#INCLUDE = robots/robots_max_speed.properties
#INCLUDE = octopus/octopus.properties

PARALLEL = true
PARALLEL.FORCE_THREADS = 6

SOLVER = "GPAT"

GP.TYPE = "gpat.GPAT"

#checking genome integrity dramatically slows down the algorithm, bu not the fitness evaluation
#GPAT.CHECK_INTEGRITY = true
GPAT.CHECK_INTEGRITY = false

#GPAT.FUNCTIONS = "Plus; Times"
#GPAT.FUNCTIONS = "Times"
#GPAT.FUNCTIONS = "Plus; Times; ATan; Sin; Gauss; Random"
GPAT.FUNCTIONS = "Plus; Times; ATan; Sin; Gauss"
#GPAT.FUNCTIONS = "Plus; ATan; Sin; Gauss"
#GPAT.FUNCTIONS = "Plus; Times; Sin; Gauss"
#GPAT.FUNCTION_IMPL = "gpat.ATFunctions$"
#GPAT.FUNCTION_IMPL = "gpat.ATFunctionsComplexifyOnly$"
#GPAT.FUNCTION_IMPL = "gpat.ATFunctionsLocks$"
GPAT.FUNCTION_IMPL = "gpat.ATFunctionsAllConsts$"
#GPAT.FUNCTION_IMPL = "gpat.ATFunctionsNoConsts$"
#GPAT.FUNCTION_IMPL = "gpat.ATFunctionsLikeGP$"
#GPAT.FUNCTION_IMPL = "gpat.ATFunctions$","gpat.ATFunctionsNoConsts$","gpat.ATFunctionsLikeGP$"

GP.MAX_EVALUATIONS = 10000000

GPAT.MUTATION_REPLACE_CONSTANT = 0.25
GP.MUTATION_CAUCHY_PROBABILITY = 0.25
GP.MUTATION_CAUCHY_POWER = 0.01

GPAT.MUTATION_ADD_LINK = 0.06

#GPAT.MUTATION_ADD_NODE = 0.001
GPAT.MUTATION_ADD_NODE = 0.001,0.01

#GPAT.MUTATION_INSERT_ROOT = 0.01
GPAT.MUTATION_INSERT_ROOT = 0.00

GPAT.MUTATION_PRUNE_SUBTREE = 0.0
GPAT.MUTATION_SWITCH_NODE = 0.3
GPAT.MUTATION_SWITCH_LEAF = 0.3

GPAT.MUTATION_SWITCH_CONSTANT_LOCK = 0.0

GPAT.MUTATION_HEAVY_PROB = 0.0
GPAT.MUTATION_HEAVY_POWER = 1

#starting distance delta
GPAT.DISTANCE_DELTA = 2.0
#the mean number of species, double used for simpler parameter optimization
GPAT.SPECIES_COUNT_MEAN = 20.0
#GPAT.SPECIES_COUNT_MEAN = 5.0,10.0
#GPAT.SPECIES_COUNT_MEAN = (1.0;33.0;1.0)
#GPAT.SPECIES_COUNT_MEAN = 10.0
#the range of number of species, # of species varies +-0.5*SPECIES_COUNT_RANGE
#GPAT.SPECIES_COUNT_RANGE = 2.0
GPAT.SPECIES_COUNT_RANGE = 0.0
#GPAT.SPECIES_COUNT_RANGE = 0.0

GPAT.ELITIST_PROPORTION_SIZE = 0.2
#GPAT.ELITIST_PROPORTION_SIZE = 0.0
GPAT.SPECIES_REPRODUCTION_RATIO = 0.2
#GPAT.SPECIES_REPRODUCTION_RATIO = 0.6

GPAT.MAX_NODES = 12
#GPAT.MAX_NODES = 35

GPAT.DISTANCE = "BASIC"
#GPAT.DISTANCE = "CONSTANT"
#GPAT.DISTANCE = "RANDOM"
#GPAT.DISTANCE = "GENERAL"
#GPAT.DISTANCE = "ROOTO"
#GPAT.DISTANCE = "SIMPLE"
#GPAT.DISTANCE = "SIMPLE2"
#GPAT.DISTANCE = "SIMPLE_REC"
#GPAT.DISTANCE = "SIMPLE_REC2"
#GPAT.DISTANCE = "SIMPLE_REC3"
#GPAT.DISTANCE = "SIMPLE_REC4"
#GPAT.DISTANCE = "SIMPLE_REC5"
#GPAT.DISTANCE = "SIMPLE_REC6"
#GPAT.DISTANCE = "SIMPLE_REC7"
#GPAT.DISTANCE = "WEIGHTED"
#GPAT.DISTANCE = "WEIGHTEDO"
#GPAT.DISTANCE = "WEIGHTEDO2"
#GPAT.DISTANCE = "RESTO"
#GPAT.DISTANCE = "RESTO2"
#GPAT.DISTANCE = "PHENO"

#GPAT.DISTANCE_WEIGHTED_C1 = 1.0

#GPAT.DISTANCE_REC5_C1 = 0.1,0.5,0.9
#GPAT.DISTANCE_REC5_C1 = 0.5
#GPAT.DISTANCE_REC5_C1 = 0.5
#GPAT.DISTANCE_REC5_C2 = 0.1,0.5,0.8,0.9,0.95
#GPAT.DISTANCE_REC5_C2 = 0.9
#GPAT.DISTANCE_REC5_C2 = 0.9

#GPAT.DISTANCE_REC6_C1 = 0.5
#GPAT.DISTANCE_REC6_C2 = 0.9

#GPAT.DISTANCE_REC7_C1 = 0.9
#GPAT.DISTANCE_REC7_C2 = 0.8

#GPAT.DISTANCE = "BASIC","CONSTANT","RANDOM","ROOTO","SIMPLE","SIMPLE2","SIMPLE_REC","SIMPLE_REC2","SIMPLE_REC3","SIMPLE_REC4","SIMPLE_REC5"
#GPAT.DISTANCE = "SIMPLE_REC5","SIMPLE_REC6","SIMPLE_REC7"
#GPAT.DISTANCE = "BASIC","RANDOM","SIMPLE2","SIMPLE_REC4","SIMPLE_REC5","SIMPLE_REC6","SIMPLE_REC7"

#CHOICE FOR GP-LIKE
#GPAT.DISTANCE_C1 = 5.
#GPAT.DISTANCE_C2 = 1.
#GPAT.DISTANCE_C3 = 0.0
#GPAT.DISTANCE_CACT = 2.

#CHOICE FOR N
#GPAT.DISTANCE_C1 = 5.
#GPAT.DISTANCE_C2 = 2.
#GPAT.DISTANCE_C3 = 0.0
#GPAT.DISTANCE_CACT = 5.

#CHOICE FOR NC
#GPAT.DISTANCE_C1 = 5.
#GPAT.DISTANCE_C2 = 1.
#GPAT.DISTANCE_C3 = 0.0
#GPAT.DISTANCE_CACT = 5.

#GPAT.DISTANCE_C1 = 1.0,2.0,5.0
#GPAT.DISTANCE_C2 = 1.0,2.0,5.0
#GPAT.DISTANCE_C3 = 0.0
#GPAT.DISTANCE_CACT = 5.
#GPAT.DISTANCE_CACT = 1.0,2.0,5.0

#CHOICE FOR AC
GPAT.DISTANCE_C1 = 5.
GPAT.DISTANCE_C2 = 5.
GPAT.DISTANCE_C3 = 0.0
GPAT.DISTANCE_CACT = 5.

#GP.DISTANCE_TREEP_C1 = 0.9
#GP.DISTANCE_TREEP_C2 = 0.8

#GP.DISTANCE_GENERAL_C = 0.0
#GP.DISTANCE_GENERAL_K = 1.
#GP.DISTANCE_GENERAL_K = 1.0,2.0,10.0
#GP.DISTANCE_GENERAL_NOT_MATCHING_NODE_EXIT = true
#GP.DISTANCE_GENERAL_NOT_MATCHING_NODE_EXIT = false,true
#GP.DISTANCE_GENERAL_DESCEND_NULL_TREES = true
#GP.DISTANCE_GENERAL_DESCEND_NULL_TREES = false,true
#-----------------------------------------

#BUILDER = "precompiled"
#BUILDER = "basic"
#BUILDER = "cascade"

#WEIGHT_EVALUATOR = "basic"
WEIGHT_EVALUATOR = "original"
#WEIGHT_EVALUATOR = "biased"
#WEIGHT_EVALUATOR = "biased", "original"

#determines what type of distance is used for niching algorithms (NEAT, GPCrowding, ...)
#DISTANCE = "phenotype"
DISTANCE = "genotype"

#compute and store full genotype distance matrix
GENOTYPE_DIVERSITY = false
#compute and store full phenotype distance matrix
PHENOTYPE_DIVERSITY = false

#STORE_GENOTYPES_MATHEMATICA = true
STORE_GENOTYPES_MATHEMATICA = false

# show info for each generation
PRINT.generation = false
# show info when a new champion is found
PRINT.progress = false
#show evaluated champion (final network)
PRINT.progressShowHyperNet = false
# show evaluated champion (visualization)
PRINT.progressShowProblem = false
# show champion after EA stops
PRINT.finished = false
# show evaluated champion after EA stops (final network)
PRINT.finishedShowHyperNet = false
# show evaluated champion after EA stops (visualization)
PRINT.finishedShowProblem = false

# store statistics for the each generation
#PRINT.storeRun = true
PRINT.storeRun = false
